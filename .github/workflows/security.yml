name: Security & Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security checks weekly
    - cron: '0 2 * * 1'

jobs:
  # Security scanning
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=high || echo "Audit completed with warnings"
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
      
  # Code quality checks
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint || echo "ESLint not configured"
      
    - name: Check bundle size
      run: npm run build && npx bundlewatch --config .bundlewatch.json || echo "Bundlewatch not configured"
      
  # Dependency updates
  dependency-updates:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated dependencies
      run: npm outdated || echo "All dependencies are up to date"
      
    - name: Create dependency update issue
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          
          try {
            const outdated = execSync('npm outdated --json', { encoding: 'utf8' });
            const outdatedData = JSON.parse(outdated);
            
            if (Object.keys(outdatedData).length > 0) {
              let body = '## Outdated Dependencies\n\n';
              body += 'The following dependencies have updates available:\n\n';
              
              for (const [pkg, info] of Object.entries(outdatedData)) {
                body += `- **${pkg}**: ${info.current} â†’ ${info.latest}\n`;
              }
              
              body += '\n---\n*This issue was automatically generated by GitHub Actions.*';
              
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸ”§ Dependency Updates Available',
                body: body,
                labels: ['dependencies', 'automated']
              });
            }
          } catch (error) {
            console.log('No outdated dependencies found');
          } 